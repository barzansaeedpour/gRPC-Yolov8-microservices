version: '3.8'

services:
  producer:
    build: producer
    depends_on:
        - rabbit_mq
    environment:
        AMQP_URL: 'amqp://rabbit_mq?connection_attempts=10&retry_delay=10'
    volumes:
      - ./producer:/usr/src/app/producer
  consumer1:
    build: consumer
    depends_on:
        - rabbit_mq
    environment:
        AMQP_URL: 'amqp://rabbit_mq?connection_attempts=10&retry_delay=10'
    volumes:
      - ./consumer:/usr/src/app/consumer
  rabbit_mq:
    # we use management image to get the
    # plugin for web dashboard
    # image: rabbitmq:3.8-rc-management
    image: rabbitmq:management
    container_name: rabbit_mq
    ports:
        - '5672:5672'
        - '15672:15672'
    volumes:
      - rabbit_mqdata:/usr/share/rabbitmq/data
  # rabbitmq:
  #   image: rabbitmq:management
  #   container_name: rabbitmq
  #   # restart: always
  #   environment:
  #     - RABBITMQ_DEFAULT_USER=guest
  #     - RABBITMQ_DEFAULT_PASS=guest
  #   ports:
  #     - "5672:5672"  # RabbitMQ default port
  #     - "15672:15672"  # RabbitMQ management UI port
  #   volumes:
  #     - rabbit_mqdata:/code/
  # Client
  plate-detection-client:
    # image: my_yolov822:latest
    environment:
        # AMQP_URL: 'amqp://rabbit_mq?connection_attempts=10&retry_delay=10'
        AMQP_URL: 'amqp://rabbit_mq?connection_attempts=10&retry_delay=10'
    build: 
      context: ./client
      dockerfile: ./Dockerfile
    image: plate-detection:latest
    container_name: plate-detection
    # restart: always
    depends_on:
      - camera-service-server
      - rabbit_mq
    
    volumes:
      - D:/gRPC-Yolov8-microservices/client/saved_images:/code/saved_images
      - D:/gRPC-Yolov8-microservices/client/my_yolo_v8/outputs:/code/my_yolo_v8/outputs
    

  # Server
  camera-service-server:
    # image: camera_service22:latest
    environment:
        AMQP_URL: 'amqp://rabbit_mq?connection_attempts=10&retry_delay=10'
    build: 
      context: ./server
      dockerfile: ./Dockerfile
    image: camera-service:latest
    container_name: camera-service
    # restart: always
    
    volumes:
      - D:/gRPC-Yolov8-microservices/server/saved_images:/code/saved_images
      - D:/gRPC-Yolov8-microservices/server/files:/code/files

    # environment:
    #   - DISPLAY=:0  # Set the display environment variable
    # volumes:
    #   - /tmp/.X11-unix:/tmp/.X11-unix  # Mount X11 socket for GUI applications
    # devices:
    #   - /dev/video0:/dev/video0  # Map the camera device

  
volumes:
    rabbit_mqdata:
      driver: local
# volumes:
#   plate-detection-client:
#     - D:/gRPC-Yolov8-microservices/client/saved_images:/code/saved_images
